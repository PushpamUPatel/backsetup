#!/bin/bash

# Check: sudo
set -e
sudo -V
set +e

if [[ $1 != '' ]]
then
	echo $1
	BKPDIR=$1/0_BACKUP
else
	BKPDIR=/home/$USER/0_BACKUP
fi

DEPS="$BKPDIR/home/$USER/4_Code/Deps"

if [[ ! -d $BKPDIR ]]
then
	set -e
	mkdir $BKPDIR
	set +e
fi

# Help
echo -e "\n\033[1;96;100m Help: \033[0m"
echo -e "\033[1;32mBKP: [ S(kip) / b(ackup) / r(estore) / q(uit) ]:"
echo -e "ADD: [ S(kip) / i(nstall) /u(ninstall) / q(uit) ]:\033[0m\n"

# Backup-Restore
BKP() {
	# Argunment Handeling
	echo -e -n "\033[1;33m$2 $1 [S/b/r/q]: \033[0m"
	read ARG
	if [[ $ARG == 'S' || $ARG == 's' || $ARG == '' ]]
	then
		echo ""
		return
	elif [[ $ARG == 'B' || $ARG == 'b' ]]
	then
		FROM=''
		TO=$BKPDIR
	elif [[ $ARG == 'R' || $ARG == 'r' ]]
	then
		FROM=$BKPDIR
		TO=''
	elif [[ $ARG == 'Q' || $ARG == 'q' ]]
	then
		sudo chown -R $USER:$USER $BKPDIR/*
		exit
	else
		echo -e "\033[1;31mNot a valid argunment...! \033[0m\n"
		return
	fi

	# Task Handeling
	if [[ $1 == '-rf' && $2 != '' && -f $FROM$2 ]]
	then
		sudo mkdir -p $(dirname $TO$2)
		sudo cp -u $FROM$2 $TO$2
		echo -e "\033[1;32m$TO$2 is done... \033[0m\n"
		return
	elif [[ $1 == '-hf' && $2 != '' && -f $FROM$HOME$2 ]]
	then
		mkdir -p $(dirname $TO$HOME$2)
		cp -u $FROM$HOME$2 $TO$HOME$2
		echo -e "\033[1;32m$TO$HOME$2 is done... \033[0m\n"
		return
	elif [[ $1 == '-rd' && $2 != '' && -d $FROM$2 ]]
	then
		sudo mkdir -p $(dirname $TO$2)
		if [[ -d $TO$2 ]]
		then
			sudo rm -r $TO$2
		fi
		sudo cp -u -r $FROM$2 $TO$2
		echo -e "\033[1;32m$TO$2 is done... \033[0m\n"
		return
	elif [[ $1 == '-hd' && $2 != '' && -d $FROM$HOME$2 ]]
	then
		mkdir -p $(dirname $TO$HOME$2)
		if [[ -d $TO$HOME$2 ]]
		then
			rm -r $TO$HOME$2
		fi
		cp -u -r $FROM$HOME$2 $TO$HOME$2
		echo -e "\033[1;32m$TO$HOME$2 is done... \033[0m\n"
		return
	else
		echo -e "\033[1;31mError in BKP flag or file/directory not exixt...! \033[0m\n"
		return
	fi
}

# Conditional Functions
COND=""
CMD() {
	if [[ $1 == $COND ]]
	then
		eval $2
	fi
}

MAKE() {
	if [[ $1 == $COND ]]
	then
		set -e
		unzip $DEPS/$2.zip -d $DEPS/
		make -C $DEPS/$2/
		sudo make install -C $DEPS/$2/
		sudo rm -r $DEPS/$2/
		set +e
	fi
}

# Add-Remove Software Packages
ADD() {
	echo -e -n "\033[1;36m$2 ($3) [S/i/u/q]: \033[0m"
	read ARG
	if [[ $ARG == 'S' || $ARG == 's' || $ARG == '' ]]
	then
		COND="-ifS"
		eval $1
		eval $4
		return
	elif [[ $ARG == 'I' || $ARG == 'i' ]]
	then
		COND="-ifI"
		eval $1
		sudo apt-get install -y $3
		eval $4
		return
	elif [[ $ARG == 'U' || $ARG == 'u' ]]
	then
		STAT="-ifU"
		eval $1
		sudo apt-get purge -y $3
		sudo apt-get autoremove -y
		eval $4
		return
	elif [[ $ARG == 'Q' || $ARG == 'q' ]]
	then
		sudo chown -R $USER:$USER $BKPDIR/*
		exit
	else
		echo -e "\033[1;31mNot a valid argunment...! \033[0m\n"
		return
	fi
}

##### Usage #####

# APT
ADD " \
	BKP -rf /etc/apt/sources.list; \
	CMD -ifI \"sudo apt-get update\"
" \
"APT" "software-properties-common" \
""


# Home
BKP -hd /1_Documents/
BKP -hd /2_Literature/
BKP -hd /3_Learnings/
BKP -hd /4_Code/

# TTY
BKP -rf /etc/default/console-setup

# grub
ADD "" \
"To update grub configs select 'i'" "" \
" \
	BKP -rf /etc/default/grub; \
	CMD -ifI \"sudo update-grub2\"; \
"

# scripts
BKP -rf /bin/backsetup
BKP -rf /bin/note
BKP -rf /etc/nanorc
BKP -hf /.bashrc
BKP -hf /.profile

# Compilers
ADD "" \
"C / C++ & Tools" "gcc g++ make" \
""

ADD "" \
"Python & packages" "python3.9-dev python3-pip" \
" \
	CMD -ifI \"sudo pip3 install numpy scipy sklearn pandas matplotlib flask flask_restful\"; \
"

# Network & Servers

ADD "" \
"Network" "firmware-iwlwifi ufw apache2 curl net-tools network-manager" \
" \
	CMD -ifI \"sudo ufw app info 'WWW Full'\"; \
	CMD -ifI \"sudo systemctl status apache2.service\"; \
	BKP -rd /etc/apache2/; \
	CMD -ifI \"sudo systemctl reload apache2 \"; \
"

BKP -rf /etc/hosts;
BKP -rd /usr/local/lib/nodejs/;


# DATABASE
## Mysql / Mariadb
ADD "" \
"Mysql" "default-mysql-server" \
" \
	CMD -ifI \"sudo mysql_secure_installation\"; \
"

## PostgreSQL
ADD "" \
"Postgre SQL" "postgresql postgresql-contrib" \
""

## PHP
ADD "" \
"php" "php php-mysql php-curl php-gd php-mbstring php-xml php-xmlrpc php-soap php-intl libapache2-mod-php php-json php-zip php-cli" \
""

## Erlang + Elixir + Phenix Deps
ADD " \
	CMD -ifI \"sudo dpkg -i $DEPS/erlang-solutions_2.0_all.deb \"; \
	CMD -ifI \"sudo apt-get update \"; \
" \
"Erlang Solutions 2.0, Elixir & phenix" "esl-erlang erlang-dev erlang-parsetools elixir inotify-tools" \
""

ADD "" \
"File System" "dosfstools ntfs-3g mtools e2fsprogs jfsutils reiserfsprogs xfsprogs" \
""

ADD "" \
"Tools" "alsa-utils pulseaudio moc ffmpeg tlp thermald zip" \
""

# Windowing system X11 & BSPWM

ADD "" \
"X11" "xorg" \
" \
	BKP -rf /etc/X11/xinit/xinitrc; \
	BKP -rf /usr/share/X11/xorg.conf.d/40-libinput.conf; \
	BKP -hf /.Xresources; \
"

ADD "" \
"BSPWM & SXHKD" "xcb libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-xinerama0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-shape0-dev" \
" \
	MAKE -ifI bspwm-master; \
	MAKE -ifI sxhkd-master; \
	BKP -hd /.config/bspwm/; \
	BKP -hd /.config/sxhkd/; \
"

ADD "" \
"lemonbar-xft" "libxft-dev libx11-xcb-dev" \
" \
	MAKE -ifI lemonbar-xft-xft-port; \
	MAKE -ifI xtitle-master; \
	BKP -hd /.config/bar/; \
"

ADD " \
" \
"dmenu-xft" "libxinerama-dev" \
" \
	MAKE -ifI dmenu-xft-master; \
"

ADD "" \
"xdo" "libxcb-xtest0-dev" \
" \
	MAKE -ifI xdo-master; \
"

ADD "" \
"sutils" "libasound2-dev" \
" \
	MAKE -ifI sutils-master; \
"

ADD "" \
"GUI Tools" "chromium firefox-esr thunar mplayer feh pavucontrol-qt" \
" \
	BKP -hd /.config/gtk-3.0/; \
	BKP -hd /.config/wallpaper/; \
"

ADD "" \
"Fonts & Latex" "fonts-samyak fonts-nanum texlive-science" \
""

sudo chown -R $USER:$USER $BKPDIR/*
